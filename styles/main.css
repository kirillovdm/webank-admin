/* Barebones Compass stylesheet
 *
 * This file is used to include all the other scss files
 *
 * One exception is base.scss, which itself contains other included files. This
 * is done so you can use the same base styles with different sets of included
 * files
 *
 * See individual included files for more info
 *
 * NOTE: This file is not meant to contain any rules directly
 */
/* Barebones Compass base styles
 *
 * This file provides base styles, mixins and variables, used throughout the
 * project
 *
 * See individual included files for more info
 *
 * NOTE: This file is not meant to contain any rules directly
 */
/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */ }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

/* Barebones fonts
 *
 * This file contains custom font imports and font stacks for different font
 * types
 */
/* Examples of font import statements
 *
 * Copy and paste outside of comment section
 *
 * Google Fonts single font face
 * @see http://www.google.com/fonts
 *
 *     @import url(http://fonts.googleapis.com/css?family=Roboto:400,700,400italic,700italic&subset=latin,cyrillic,cyrillic-ext);
 *
 * Google Fonts combination of font faces
 * @see http://www.google.com/fonts
 *
 *     @import url(http://fonts.googleapis.com/css?family=Roboto:400,700|PT+Serif:400,700&subset=latin,cyrillic,cyrillic-ext);
 *
 *
 *     // Example of mixin usage
 *	   @include font-face(YourAwesomeFont, '/fonts/your-awesome-font/your-awesome-font-regular');
 *     @include font-face(YourAwesomeFont, '/fonts/your-awesome-font/your-awesome-font-bold', bold);
 *     @include font-face(YourAwesomeFont, '/fonts/your-awesome-font/your-awesome-font-italic', normal, italic);
 */
/* Default font stacks
 */
@font-face {
  font-family: 'MuseoSansCyrl';
  src: url("../fonts/MuseoSansCyrl-100.eot?#iefix") format("embedded-opentype"), url("../fonts/MuseoSansCyrl-100.otf") format("opentype"), url("../fonts/MuseoSansCyrl-100.woff") format("woff"), url("../fonts/MuseoSansCyrl-100.ttf") format("truetype"), url("../fonts/MuseoSansCyrl-100.svg#MuseoSansCyrl-100") format("svg");
  font-weight: 100;
  font-style: normal; }

@font-face {
  font-family: 'MuseoSansCyrl';
  src: url("../fonts/MuseoSansCyrl-300.eot?#iefix") format("embedded-opentype"), url("../fonts/MuseoSansCyrl-300.otf") format("opentype"), url("../fonts/MuseoSansCyrl-300.woff") format("woff"), url("../fonts/MuseoSansCyrl-300.ttf") format("truetype"), url("../fonts/MuseoSansCyrl-300.svg#MuseoSansCyrl-300") format("svg");
  font-weight: 300;
  font-style: normal; }

@font-face {
  font-family: 'MuseoSansCyrl';
  src: url("../fonts/MuseoSansCyrl-500.eot?#iefix") format("embedded-opentype"), url("../fonts/MuseoSansCyrl-500.otf") format("opentype"), url("../fonts/MuseoSansCyrl-500.woff") format("woff"), url("../fonts/MuseoSansCyrl-500.ttf") format("truetype"), url("../fonts/MuseoSansCyrl-500.svg#MuseoSansCyrl-500") format("svg");
  font-weight: 500;
  font-style: normal; }

@font-face {
  font-family: 'MuseoSansCyrl';
  src: url("../fonts/MuseoSansCyrl-700.eot?#iefix") format("embedded-opentype"), url("../fonts/MuseoSansCyrl-700.otf") format("opentype"), url("../fonts/MuseoSansCyrl-700.woff") format("woff"), url("../fonts/MuseoSansCyrl-700.ttf") format("truetype"), url("../fonts/MuseoSansCyrl-700.svg#MuseoSansCyrl-700") format("svg");
  font-weight: 700;
  font-style: normal; }

@font-face {
  font-family: 'MuseoSansCyrl';
  src: url("../fonts/MuseoSansCyrl-900.eot?#iefix") format("embedded-opentype"), url("../fonts/MuseoSansCyrl-900.otf") format("opentype"), url("../fonts/MuseoSansCyrl-900.woff") format("woff"), url("../fonts/MuseoSansCyrl-900.ttf") format("truetype"), url("../fonts/MuseoSansCyrl-900.svg#MuseoSansCyrl-900") format("svg");
  font-weight: 900;
  font-style: normal; }

/* Barebones Compass variables
 *
 * This file should be used to redefine values used by other files. Most basic
 * style tweaks can be done from this file
 *
 * Font stacks are defined within base/_font.scss
 */
/* Base typography settings
 */
/* Base visual settings
 */
/* Base layout settings
 */
/* Sprite settings
 */
/* Link settings
 */
/* Button settings
 */
/* Layout settings
 */
/* Layout grid settings
 *
 * NOTE: grid container is usually placed inside .layout-container element. This
 * means the grid is limited by $layout-container-width. That is why the following
 * condition should be met:
 *
 *     $width:   $layout-grid-column-width;
 *     $columns: $layout-grid-columns;
 *     $spacing: $layout-grid-column-spacing;
 *
 *     $layout-container-width == ($width * $columns) + ($spacing * ($columns - 1))
 */
/* Sticky footer settings
 *
 * To use sticky footer, set the following value to true. Layout footer height
 * setting is required for the sticky footer to work
 *
 * Your layout markup should only have two elements within the body:
 * .layout-content and .layout-footer. All other elements should be within
 * .layout-content
 */
/* Barebones Compass functions
 *
 * Contains custom functions in use within the project
 *
 * See individual functions for more info
 */
/* PX to REM function
 *
 * This function is used to calculate rem value based on base font size value:
 *
 *     .my-class {
 *         font-size: rem(24px);
 *     }
 *
 * @uses $base-font-size as the default $base value
 */
/* Barebones Compass mixins
 *
 * Contains custom mixins in use within the project
 *
 * See individual mixins for more info
 */
/* Base diff mixin
 *
 * Redefines basic typography settings and background, but only if they differ
 * from base values:
 *
 *     .my-class {
 *         base-diff(#000, $font-sans-serif, 32px);
 *     }
 *
 * Base values are defined in base/_variable.scss
 *
 * @uses $base-color
 * @uses $base-font-family
 * @uses $base-font-size
 * @uses $base-font-style
 * @uses $base-font-weight
 * @uses $base-line-height
 * @uses $base-background-color
 */
/* Vertical centering mixin
 *
 * This mixin allows content to be centered within a container element:
 *
 *     .my-container-class {
 *         @include vertical-center ('.my-child-element');
 *     }
 *
 * NOTE: depending on font-size and font-family, you might need to adjust
 * the pseudo-element's left margin:
 *
 *     .my-container-class {
 *         @include vertical-center ('.my-child-element', -0.3em);
 *     }
 */
/* Text inputs mixin
 *
 * This mixin allows to style all textual inputs with a simple selector:
 *
 *     @include text-input {
 *         color: #ccc;
 *     }
 *
 * Currently includes text, password, email, number, search, tel and url input
 * types
 */
/* Clearfix mixin
 *
 * Extend this to get a clearfix after element:
 *
 *     .my-element {
 *         @extend %clearfix;
 *     }
 */
.clearfix:after, .info-tabs:after, .layout-container:after, .layout-container-fluid:after, .left-block:after, .right-block:after, .application-tabs:after {
  content: "";
  display: table;
  clear: both; }

input[type="checkbox"]:checked + .checkbox-label:after, input[type="checkbox"]:checked:hover + .checkbox-label:after, .search-btn, .user-data table tr td .add-plus,
.user-data table tr td .view-eye,
.user-data table tr td .icon-note, .pledge-description .plege-documents .doc-item, .collapse-item.contract .contracts-block .contract-item .add-contr,
.collapse-item.contract .contracts-block .contract-item .view-contr, .collapse-item.documents .doc-block .doc-note,
.collapse-item.documents .doc-block .doc-view, .icon-check, .icon-del, .icon-comments, .icon-pen, div[class^="icon-property-"], .aside-item-header .icon-item, .right-block .messages .icon-item,
.right-block .notifications .icon-item, .aside-toggle:after {
  background-repeat: no-repeat;
  background-position: 50% 50%; }

/* List-reset mixin
 *
 * Extend this to reset a list element (ul, ol etc):
 *
 *     ul.my-list {
 *         @extend list-reset;
 *     }
 */
/* Responsive styles mixin
 *
 * This mixin allows to style the element for certain devices. Developers are
 * meant to edit available devices (their names and media queries) within the
 * mixin before using it in their styles:
 *
 *     .my-element {
 *         width: 940px;
 *         margin: 0 auto;
 *
 *         @include respond(tablet) {
 *             // Stretch to full width on tablets
 *             width: auto;
 *             margin: 0 10px;
 *         }
 *     }
 */
/* Font-face mixin
 *
 * Taken from: https://github.com/thoughtbot/bourbon/blob/master/app/assets/stylesheets/css3/_font-face.scss
 * Order of the includes matters, and it is: normal, bold, italic, bold+italic.
 *
 */
/* Barebones Compass link mixins
 *
 * Contains custom link mixins in use within the project
 *
 * See individual mixins for more info
 */
/* Link transitions
 *
 * Set to false to disable link transitions
 */
/* Link transition duration
 *
 * Defines link transition duration
 */
/* Link transition function
 *
 * Defines link transition function
 */
/* Basic link mixin
 *
 * Defines font colors for basic link states: visited, hover and active. By
 * default, focus state is the same as hover state, but you can set a different
 * color for focus state
 *
 * @uses $link-transitions
 * @uses $link-transition-duration
 * @uses $link-transition-function
 */
/* Bordered link mixin
 *
 * Defines font and bottom border colors for basic link states: visited, hover
 * and active. By default, focus state is the same as hover state, but you can
 * set a different color for focus state
 *
 * @uses $link-transitions
 * @uses $link-transition-duration
 * @uses $link-transition-function
 */
/* Barebones Compass triangle mixin
 *
 * Contains custom triangle mixin in use within the project
 */
/* Triangle mixin
 *
 * This mixin helps drawing triangles with borders.
 *
 *     .my-class {
 *         triangle(15px, #ccc, bottom);
 *     }
 *
 * TODO: write docs
 */
/* Barebones Compass button mixins
 *
 * Contains custom button mixins in use within the project
 *
 * See individual mixins for more info
 */
/* Button transitions
  *
  * Set to false to disable button transitions
  */
/* Button transition duration
 *
 * Defines button transition duration
 */
/* Button transition function
 *
 * Defines button transition function
 */
/* Basic button mixin
 *
 * Defines font and background colors for basic color states: hover, active and
 * disabled. By default, focus state is the same as hover state, but you can set
 * different colors for focus state. By default, disabled state is inactive
 *
 * @uses $button-transitions
 * @uses $button-transition-duration
 * @uses $button-transition-function
 */
.svg-icon-animated:before {
  content: '';
  position: absolute;
  width: 20px;
  height: 20px;
  left: 0;
  top: 0;
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  transition: opacity 0.15s linear; }

.svg-icon-animated:after {
  content: '';
  position: absolute;
  width: 20px;
  height: 20px;
  left: 0;
  top: 0;
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  transition: opacity 0.15s linear;
  opacity: 0; }

.svg-icon-animated:hover:before {
  opacity: 0; }

.svg-icon-animated:hover:after {
  opacity: 1; }

*:hover > .svg-icon-animated:before {
  opacity: 0; }

*:hover > .svg-icon-animated:after {
  opacity: 1; }

.icon {
  display: inline-block;
  background-repeat: no-repeat; }

/**
 * selectize.scss (v0.8.7)
 * Copyright (c) 2014 Emanuel Kluge
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this
 * file except in compliance with the License. You may obtain a copy of the License at:
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF
 * ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 *
 * @author Emanuel Kluge <mail@emanuel-kluge.de>
 */
.selectize-control {
  position: relative; }

.selectize-dropdown,
.selectize-input,
.selectize-input input {
  color: #303030;
  font-family: inherit;
  font-size: 13px;
  line-height: 18px;
  -webkit-font-smoothing: inherit; }

.selectize-input,
.selectize-control.single .selectize-input.input-active {
  background: #fff;
  cursor: text;
  display: inline-block; }

.selectize-input {
  border: 1px solid #d0d0d0;
  padding: 8px 8px;
  display: inline-block;
  width: 100%;
  overflow: hidden;
  position: relative;
  z-index: 1;
  box-sizing: border-box;
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.1);
  border-radius: 3px; }
  .selectize-control.multi .selectize-input.has-items {
    padding: 6px 8px 3px; }
  .selectize-input.full {
    background-color: #fff; }
  .selectize-input.disabled, .selectize-input.disabled * {
    cursor: default !important; }
  .selectize-input.focus {
    box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.15); }
  .selectize-input.dropdown-active {
    border-radius: 3px 3px 0 0; }
  .selectize-input > * {
    vertical-align: baseline;
    display: -moz-inline-stack;
    display: inline-block;
    zoom: 1;
    *display: inline; }
  .selectize-control.multi .selectize-input > div {
    cursor: pointer;
    margin: 0 3px 3px 0;
    padding: 2px 6px;
    background: #f2f2f2;
    color: #303030;
    border: 0 solid #d0d0d0; }
    .selectize-control.multi .selectize-input > div.active {
      background: #e8e8e8;
      color: #303030;
      border: 0 solid #cacaca; }
  .selectize-control.multi .selectize-input.disabled > div, .selectize-control.multi .selectize-input.disabled > div.active {
    color: #7d7d7d;
    background: white;
    border: 0 solid white; }
  .selectize-input > input {
    display: inline-block !important;
    padding: 0 !important;
    min-height: 0 !important;
    max-height: none !important;
    max-width: 100% !important;
    margin: 0 2px 0 0 !important;
    text-indent: 0 !important;
    border: 0 none !important;
    background: none !important;
    line-height: inherit !important;
    -webkit-user-select: auto !important;
    -moz-user-select: auto !important;
    -ms-user-select: auto !important;
    user-select: auto !important;
    box-shadow: none !important; }
    .selectize-input > input::-ms-clear {
      display: none; }
    .selectize-input > input:focus {
      outline: none !important; }

.selectize-input:after {
  content: ' ';
  display: block;
  clear: left; }

.selectize-input.dropdown-active:before {
  content: ' ';
  display: block;
  position: absolute;
  background: #f0f0f0;
  height: 1px;
  bottom: 0;
  left: 0;
  right: 0; }

.selectize-dropdown {
  position: absolute;
  z-index: 10;
  border: 1px solid #d0d0d0;
  background: #fff;
  margin: -1px 0 0 0;
  border-top: 0 none;
  box-sizing: border-box;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  border-radius: 0 0 3px 3px; }
  .selectize-dropdown [data-selectable] {
    cursor: pointer;
    overflow: hidden; }
    .selectize-dropdown [data-selectable] .highlight {
      background: rgba(125, 168, 208, 0.2);
      border-radius: 1px; }
  .selectize-dropdown [data-selectable], .selectize-dropdown .optgroup-header {
    padding: 5px 8px; }
  .selectize-dropdown .optgroup:first-child .optgroup-header {
    border-top: 0 none; }
  .selectize-dropdown .optgroup-header {
    color: #303030;
    background: #fff;
    cursor: default; }
  .selectize-dropdown .active {
    background-color: #f5fafd;
    color: #495c68; }
    .selectize-dropdown .active.create {
      color: #495c68; }
  .selectize-dropdown .create {
    color: rgba(48, 48, 48, 0.5); }

.selectize-dropdown-content {
  overflow-y: auto;
  overflow-x: hidden;
  max-height: 200px; }

.selectize-control.single .selectize-input, .selectize-control.single .selectize-input input {
  cursor: pointer; }

.selectize-control.single .selectize-input.input-active, .selectize-control.single .selectize-input.input-active input {
  cursor: text; }

.selectize-control.single .selectize-input:after {
  content: ' ';
  display: block;
  position: absolute;
  top: 50%;
  right: 15px;
  margin-top: -3px;
  width: 0;
  height: 0;
  border-style: solid;
  border-width: 5px 5px 0 5px;
  border-color: #808080 transparent transparent transparent; }

.selectize-control.single .selectize-input.dropdown-active:after {
  margin-top: -4px;
  border-width: 0 5px 5px 5px;
  border-color: transparent transparent #808080 transparent; }

.selectize-control.rtl.single .selectize-input:after {
  left: 15px;
  right: auto; }

.selectize-control.rtl .selectize-input > input {
  margin: 0 4px 0 -2px !important; }

.selectize-control .selectize-input.disabled {
  opacity: 0.5;
  background-color: #fafafa; }

/**
 * selectize.scss (v0.8.7)
 * Copyright (c) 2014 Emanuel Kluge
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this
 * file except in compliance with the License. You may obtain a copy of the License at:
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF
 * ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 *
 * @author Emanuel Kluge <mail@emanuel-kluge.de>
 */
.selectize-control {
  position: relative; }

.selectize-dropdown,
.selectize-input,
.selectize-input input {
  color: #303030;
  font-family: inherit;
  font-size: 13px;
  line-height: 18px;
  -webkit-font-smoothing: inherit; }

.selectize-input,
.selectize-control.single .selectize-input.input-active {
  background: #fff;
  cursor: text;
  display: inline-block; }

.selectize-input {
  border: 1px solid #d0d0d0;
  padding: 8px 8px;
  display: inline-block;
  width: 100%;
  overflow: hidden;
  position: relative;
  z-index: 1;
  box-sizing: border-box;
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.1);
  border-radius: 3px; }
  .selectize-control.multi .selectize-input.has-items {
    padding: 6px 8px 3px; }
  .selectize-input.full {
    background-color: #fff; }
  .selectize-input.disabled, .selectize-input.disabled * {
    cursor: default !important; }
  .selectize-input.focus {
    box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.15); }
  .selectize-input.dropdown-active {
    border-radius: 3px 3px 0 0; }
  .selectize-input > * {
    vertical-align: baseline;
    display: -moz-inline-stack;
    display: inline-block;
    zoom: 1;
    *display: inline; }
  .selectize-control.multi .selectize-input > div {
    cursor: pointer;
    margin: 0 3px 3px 0;
    padding: 2px 6px;
    background: #f2f2f2;
    color: #303030;
    border: 0 solid #d0d0d0; }
    .selectize-control.multi .selectize-input > div.active {
      background: #e8e8e8;
      color: #303030;
      border: 0 solid #cacaca; }
  .selectize-control.multi .selectize-input.disabled > div, .selectize-control.multi .selectize-input.disabled > div.active {
    color: #7d7d7d;
    background: white;
    border: 0 solid white; }
  .selectize-input > input {
    display: inline-block !important;
    padding: 0 !important;
    min-height: 0 !important;
    max-height: none !important;
    max-width: 100% !important;
    margin: 0 2px 0 0 !important;
    text-indent: 0 !important;
    border: 0 none !important;
    background: none !important;
    line-height: inherit !important;
    -webkit-user-select: auto !important;
    -moz-user-select: auto !important;
    -ms-user-select: auto !important;
    user-select: auto !important;
    box-shadow: none !important; }
    .selectize-input > input::-ms-clear {
      display: none; }
    .selectize-input > input:focus {
      outline: none !important; }

.selectize-input:after {
  content: ' ';
  display: block;
  clear: left; }

.selectize-input.dropdown-active:before {
  content: ' ';
  display: block;
  position: absolute;
  background: #f0f0f0;
  height: 1px;
  bottom: 0;
  left: 0;
  right: 0; }

.selectize-dropdown {
  position: absolute;
  z-index: 10;
  border: 1px solid #d0d0d0;
  background: #fff;
  margin: -1px 0 0 0;
  border-top: 0 none;
  box-sizing: border-box;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  border-radius: 0 0 3px 3px; }
  .selectize-dropdown [data-selectable] {
    cursor: pointer;
    overflow: hidden; }
    .selectize-dropdown [data-selectable] .highlight {
      background: rgba(125, 168, 208, 0.2);
      border-radius: 1px; }
  .selectize-dropdown [data-selectable], .selectize-dropdown .optgroup-header {
    padding: 5px 8px; }
  .selectize-dropdown .optgroup:first-child .optgroup-header {
    border-top: 0 none; }
  .selectize-dropdown .optgroup-header {
    color: #303030;
    background: #fff;
    cursor: default; }
  .selectize-dropdown .active {
    background-color: #f5fafd;
    color: #495c68; }
    .selectize-dropdown .active.create {
      color: #495c68; }
  .selectize-dropdown .create {
    color: rgba(48, 48, 48, 0.5); }

.selectize-dropdown-content {
  overflow-y: auto;
  overflow-x: hidden;
  max-height: 200px; }

.selectize-control.single .selectize-input, .selectize-control.single .selectize-input input {
  cursor: pointer; }

.selectize-control.single .selectize-input.input-active, .selectize-control.single .selectize-input.input-active input {
  cursor: text; }

.selectize-control.single .selectize-input:after {
  content: ' ';
  display: block;
  position: absolute;
  top: 50%;
  right: 15px;
  margin-top: -3px;
  width: 0;
  height: 0;
  border-style: solid;
  border-width: 5px 5px 0 5px;
  border-color: #808080 transparent transparent transparent; }

.selectize-control.single .selectize-input.dropdown-active:after {
  margin-top: -4px;
  border-width: 0 5px 5px 5px;
  border-color: transparent transparent #808080 transparent; }

.selectize-control.rtl.single .selectize-input:after {
  left: 15px;
  right: auto; }

.selectize-control.rtl .selectize-input > input {
  margin: 0 4px 0 -2px !important; }

.selectize-control .selectize-input.disabled {
  opacity: 0.5;
  background-color: #fafafa; }

.selectize-control.multi .selectize-input.has-items {
  padding-left: 5px;
  padding-right: 5px; }

.selectize-control.multi .selectize-input.disabled [data-value] {
  color: #999;
  text-shadow: none;
  background: none;
  box-shadow: none; }
  .selectize-control.multi .selectize-input.disabled [data-value],
  .selectize-control.multi .selectize-input.disabled [data-value] .remove {
    border-color: #e6e6e6; }
  .selectize-control.multi .selectize-input.disabled [data-value] .remove {
    background: none; }

.selectize-control.multi .selectize-input [data-value] {
  text-shadow: 0 1px 0 rgba(0, 51, 83, 0.3);
  border-radius: 3px;
  background-color: #1b9dec;
  background-image: linear-gradient(to bottom, #1da7ee, #178ee9);
  background-repeat: repeat-x;
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#1da7ee', endColorstr='#178ee9', GradientType=0);
  box-shadow: 0 1px 0 rgba(0, 0, 0, 0.2), inset 0 1px rgba(255, 255, 255, 0.03); }
  .selectize-control.multi .selectize-input [data-value].active {
    background-color: #0085d4;
    background-image: linear-gradient(to bottom, #008fd8, #0075cf);
    background-repeat: repeat-x;
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#008fd8', endColorstr='#0075cf', GradientType=0); }

.selectize-control.single .selectize-input {
  box-shadow: 0 1px 0 rgba(0, 0, 0, 0.05), inset 0 1px 0 rgba(255, 255, 255, 0.8);
  background-color: #f9f9f9;
  background-image: linear-gradient(to bottom, #fefefe, #f2f2f2);
  background-repeat: repeat-x;
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fefefe', endColorstr='#f2f2f2', GradientType=0); }

.selectize-control.single .selectize-input,
.selectize-dropdown.single {
  border-color: #b8b8b8; }

.selectize-dropdown .optgroup-header {
  padding-top: 7px;
  font-weight: bold;
  font-size: .85em; }

.selectize-dropdown .optgroup {
  border-top: 1px solid #f0f0f0; }
  .selectize-dropdown .optgroup:first-child {
    border-top: 0 none; }

.modal-open {
  overflow: hidden; }

.modal {
  display: none;
  overflow: hidden;
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 1050;
  -webkit-overflow-scrolling: touch;
  outline: 0; }
  .modal.fade .modal-dialog {
    -webkit-transform: translate(0, -25%);
    transform: translate(0, -25%);
    transition: -webkit-transform 0.3s ease-out;
    transition: transform 0.3s ease-out; }
  .modal.in .modal-dialog {
    -webkit-transform: translate(0, 0);
    transform: translate(0, 0); }

.modal-open .modal {
  overflow-x: hidden;
  overflow-y: auto; }

.modal-dialog {
  position: relative;
  width: auto;
  margin: 10px; }

.modal-content {
  position: relative;
  background-color: #fff;
  border: 1px solid #999;
  border: 1px solid rgba(0, 0, 0, 0.2);
  border-radius: 6px;
  box-shadow: 0 3px 9px rgba(0, 0, 0, 0.5);
  background-clip: padding-box;
  outline: 0; }

.modal-backdrop {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 1040;
  background-color: #000; }
  .modal-backdrop.fade {
    opacity: 0;
    filter: alpha(opacity=0); }
  .modal-backdrop.in {
    opacity: 0.5;
    filter: alpha(opacity=50); }

.modal-header {
  padding: 15px;
  border-bottom: 1px solid #e5e5e5; }
  .modal-header:before, .modal-header:after {
    content: " ";
    display: table; }
  .modal-header:after {
    clear: both; }

.modal-header .close {
  margin-top: -2px; }

.modal-title {
  margin: 0;
  line-height: 1.42857; }

.modal-body {
  position: relative;
  padding: 15px; }

.modal-footer {
  padding: 15px;
  text-align: right;
  border-top: 1px solid #e5e5e5; }
  .modal-footer:before, .modal-footer:after {
    content: " ";
    display: table; }
  .modal-footer:after {
    clear: both; }
  .modal-footer .btn + .btn {
    margin-left: 5px;
    margin-bottom: 0; }
  .modal-footer .btn-group .btn + .btn {
    margin-left: -1px; }
  .modal-footer .btn-block + .btn-block {
    margin-left: 0; }

.modal-scrollbar-measure {
  position: absolute;
  top: -9999px;
  width: 50px;
  height: 50px;
  overflow: scroll; }

@media (min-width: 768px) {
  .modal-dialog {
    width: 600px;
    margin: 30px auto; }
  .modal-content {
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5); }
  .modal-sm {
    width: 300px; } }

@media (min-width: 992px) {
  .modal-lg {
    width: 900px; } }

/* Barebones Compass element styles
 *
 * General element styles
 */
/* Html styles
 *
 * Html uses base styles, which are inherited globally
 */
html {
  color: #000;
  font-family: "MuseoSansCyrl", Helvetica, Arial, sans-serif;
  font-size: 16px;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  line-height: 1.5;
  background-color: #fff;
  box-sizing: border-box; }
  html *,
  html *:before,
  html *:after {
    box-sizing: inherit; }

::-moz-selection {
  color: #fff;
  background-color: #177ee6; }

::selection {
  color: #fff;
  background-color: #177ee6; }

/* Custom element styles
 */
p {
  margin: 20px 0; }

figure {
  text-align: center;
  margin: 30px 0; }
  figure img {
    margin: 0 auto;
    display: block;
    max-width: 100%; }

figcaption {
  margin: 10px 0; }

hr {
  margin: 20px 0;
  border: 0;
  border-top: 1px solid #ccc; }

li {
  list-style: none; }

.inlineblock {
  display: inline-block !important; }

.block {
  display: block !important; }

.hide {
  display: none !important; }

.floatright {
  float: right !important; }

.floatleft {
  float: left !important; }

.nomargin {
  margin: 0 !important; }

.nopadding {
  padding: 0 !important; }

.uppercase {
  text-transform: uppercase; }

.separator10 {
  display: block;
  width: 100%;
  height: 10px; }

.separator20 {
  display: block;
  width: 100%;
  height: 20px; }

.separator30 {
  display: block;
  width: 100%;
  height: 30px; }

.separator35 {
  display: block;
  width: 100%;
  height: 35px; }

.separator40 {
  display: block;
  width: 100%;
  height: 40px; }

.separator50 {
  display: block;
  width: 100%;
  height: 50px; }

.separator100 {
  display: block;
  width: 100%;
  height: 100px; }

.vTop {
  vertical-align: top !important; }

.vMiddle {
  vertical-align: middle !important; }

.vBottom {
  vertical-align: bottom !important; }

.caps {
  text-transform: uppercase !important; }

.orange {
  color: #ff6c00 !important; }

.thinblack {
  color: #000;
  font-weight: 300; }

.greybg {
  background-color: #eceff1; }

.nowrap {
  white-space: nowrap; }

.full-content {
  margin-left: -40px;
  width: 100%; }

/* Barebones Compass link styles
 *
 * Link element styles
 */
a {
  text-decoration: none;
  color: #177ee6;
  transition: color 0.15s linear; }
  a:visited {
    color: #5777d9; }
  a:hover, a:focus {
    color: #14ccad; }
  a:active {
    color: #3d5266; }

/* Segmented link
 *
 * Intended for use with icons to avoid icons being underlined:
 *
 *     <a class="link-segmented" href="/profile.html">
 *         <span class="icon-user"></span>
 *         <span class="segment-text">Profile</span>
 *     </a>
 */
.link-segmented {
  text-decoration: none; }
  .link-segmented .segment-text {
    text-decoration: underline; }

/* Ajax link
 *
 * A dotted border is used to underline the link
 *
 * @uses $link-transitions
 * @uses $link-transition-duration
 * @uses $link-transition-function
 */
.link-ajax {
  font-weight: 300;
  font-size: 14px;
  display: inline-block;
  cursor: pointer;
  color: #ff6c00;
  text-decoration: none;
  border-bottom-style: dotted;
  border-bottom-width: 1px;
  transition: color 0.15s linear, border-bottom-color 0.15s linear; }
  .link-ajax:visited {
    color: #ff6c00;
    border-bottom-color: #ff6c00; }
  .link-ajax:hover, .link-ajax:focus {
    color: #ff7b0f;
    border-bottom-color: #ff7b0f; }
  .link-ajax:active {
    color: #ff6c00 -15%;
    border-bottom-color: #ff6c00 -15%; }
  .link-ajax.link-segmented {
    border-bottom: 0;
    transition: color 0.15s linear; }
    .link-ajax.link-segmented .segment-text {
      border-bottom: 1px 1px #177ee6;
      transition: border-bottom-color 0.15s linear; }
    .link-ajax.link-segmented:visited .segment-text {
      border-bottom-color: #5777d9; }
    .link-ajax.link-segmented:hover .segment-text, .link-ajax.link-segmented:focus .segment-text {
      border-bottom-color: #14ccad; }
    .link-ajax.link-segmented:active .segment-text {
      border-bottom-color: #3d5266; }

/* Barebones Compass header styles
 *
 * Header element styles
 */
h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: bold;
  line-height: 1.33;
  margin: 20px 0; }

h1,
h2,
h3 {
  margin-top: 35px; }

h1 {
  font-size: 2.25rem; }

h2 {
  font-size: 1.875rem; }

h3 {
  font-size: 1.5rem; }

h4 {
  font-size: 1.125rem; }

h5 {
  font-size: 1rem; }

h6 {
  font-size: 0.875rem; }

/* Barebones Compass list styles
 *
 * List element styles
 */
ul,
ol {
  margin: 20px 0;
  padding: 0;
  padding-left: 20px; }
  ul.list-unstyled,
  ol.list-unstyled {
    padding-left: 0;
    list-style: none; }

li {
  margin: 10px 0; }

/* Barebones Compass table styles
 *
 * Table element styles
 */
table {
  width: 100%; }

td,
th {
  text-align: left;
  padding: 10px 0;
  padding-right: 10px;
  vertical-align: top; }
  td.center,
  th.center {
    text-align: center; }
  td.right,
  th.right {
    text-align: right; }

th {
  font-weight: bold; }
  thead th {
    border-bottom: 1px solid #ccc; }

tfoot {
  border-color: #ccc;
  border-style: solid;
  border-width: 1px 0 1px 0; }

/* Barebones Compass form styles
 *
 * General form styles
 */
select,
label {
  cursor: pointer; }

input[type="radio"],
input[type="checkbox"] {
  margin: 3px 0 0;
  line-height: normal; }

.form {
  margin: 0; }

.form-container {
  margin: 20px 0; }

/* Barebones Compass form styles
 *
 * Form field styles
 */
/*
 * Local variables for form elements
 */
/*
 * Styles starts here
 */
.form-group {
  margin-bottom: 20px; }

label {
  margin-bottom: 5px;
  display: inline-block; }

.form-control {
  margin: 0;
  outline: 0;
  border: 1px solid transparent;
  border-bottom-color: #969696;
  padding: 15px 15px;
  font-weight: 300;
  color: #000;
  transition: border-color .15s linear;
  display: block;
  width: 100%;
  height: 30px; }
  .form-control:focus {
    border-bottom-color: #ff6c00; }
  .form-control::-webkit-input-placeholder {
    color: #bcbcbc; }
  .form-control::-moz-placeholder {
    color: #bcbcbc; }
  .form-control:-ms-input-placeholder {
    color: #bcbcbc; }
  .form-control::placeholder {
    color: #bcbcbc; }

select.form-control {
  padding-left: 4px;
  padding-right: 4px; }

textarea.form-control {
  height: auto;
  min-width: 100%;
  min-height: 100px; }

textarea {
  height: auto;
  min-width: 100%;
  width: 100%;
  border: 2px solid #e6e6e6;
  padding: 5px 10px;
  font-weight: 300;
  font-size: 14px;
  resize: vertical; }
  textarea:focus {
    outline: none; }

/*
 * Standart input elements
 */
/*
 * Custom input elements
 */
input[type="radio"],
input[type="checkbox"],
input[type="file"] {
  display: none; }

/*
 * Custom radio button
 */
.radio-label {
  padding-left: 25px;
  color: #000;
  display: inline-block;
  width: auto;
  font-weight: 300; }
  .radio-label.radio-modal {
    margin: 10px 20px 20px 0; }
  .radio-label:before {
    content: "";
    width: 15px;
    height: 15px;
    display: inline-block;
    background-color: transparent;
    vertical-align: middle;
    cursor: pointer;
    margin: -5px 10px 0 -25px;
    border: 2px solid #bbbbbb;
    transition: border-color .15s linear, background-color .15s linear; }
  .radio-label:hover:before {
    border-color: #ff6c00; }

input[type="radio"]:checked + label:before {
  border-color: #ff6c00;
  background-color: #ff6c00; }

/*
 * Custom checkbox
 */
.checkbox-label {
  padding-left: 25px;
  color: #ff6c00;
  display: inline-block;
  width: auto; }
  .checkbox-label:after {
    content: "";
    width: 18px;
    height: 18px;
    display: inline-block;
    vertical-align: middle;
    margin: -5px 10px 0 15px;
    border: 2px solid #ff6c00;
    transition: background .15s linear, border-color .15s linear; }
  .checkbox-label:hover:after {
    border-color: #ff6c00; }

input[type="checkbox"]:checked + .checkbox-label:after {
  background-image: url(../images/check.png);
  background-size: contain;
  border-bottom: 3px solid #ff6c00;
  border-color: #ff6c00;
  background-color: #ff6c00;
  font-size: 20px;
  line-height: 18px;
  color: #fff; }

input[type="checkbox"]:checked:hover + .checkbox-label:after {
  background-image: url(../images/check.png);
  background-size: contain;
  background-color: #ff7b0f;
  color: #fff; }

/*
 * Toggle
 */
.toggle-label {
  padding-left: 25px;
  color: #555;
  display: inline-block;
  width: auto;
  position: relative;
  cursor: pointer; }
  .toggle-label:before {
    content: "";
    width: 25px;
    height: 2px;
    display: inline-block;
    vertical-align: middle;
    margin: -5px 10px 0 -25px;
    background: #ccc;
    transition: all .15s linear; }
  .toggle-label:after {
    content: "";
    position: absolute;
    border-radius: 50%;
    width: 12px;
    height: 12px;
    background: #fff;
    top: 5px;
    left: 0;
    border: 2px solid #ccc;
    transition: border-color .15s linear, left .1s linear; }

input[type="checkbox"]:checked + .toggle-label:before {
  background: #61BD7E; }

input[type="checkbox"]:checked + .toggle-label:after {
  border-color: #61BD7E;
  left: 13px; }

/* Barebones Compass form styles
 *
 * Form validation styles
 */
.has-success .form-control {
  border-color: #14ccad; }

.has-error .form-control {
  border-color: #f27349; }

.has-error .validation-msg {
  color: #f27349;
  margin: 5px 0 0; }

/* Barebones Compass form styles
 *
 * Form button styles
 */
.btn {
  letter-spacing: 1px;
  text-align: center;
  background-image: none;
  margin: 0;
  outline: 0;
  border: 0;
  border-radius: 0;
  padding: 5px 10px;
  display: inline-block;
  vertical-align: middle;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  cursor: pointer;
  background-color: #333;
  transition: color 0.15s linear, background-color 0.15s linear; }
  .btn, .btn:visited {
    color: #fff; }
  .btn:hover, .btn:focus {
    color: #fff; }
  .btn:hover, .btn:focus {
    background-color: #777; }
  .btn:active {
    color: #fff;
    background-color: #000; }

.btn-primary {
  background-color: #ff6c00;
  transition: color 0.15s linear, background-color 0.15s linear;
  background-color: #ff6c00;
  font-size: 14px;
  font-weight: 500; }
  .btn-primary, .btn-primary:visited {
    color: #fff; }
  .btn-primary:hover, .btn-primary:focus {
    color: #fff; }
  .btn-primary:hover, .btn-primary:focus {
    background-color: #ff7b0f; }
  .btn-primary:active {
    color: #fff;
    background-color: #f05d00; }

.btn-block {
  display: block;
  width: 100%; }
  .btn-block + .btn-block {
    margin-top: 10px; }

.btn-transparent {
  border: 2px solid #ff6c00;
  background: transparent;
  border-radius: 0;
  outline: 0;
  text-decoration: none;
  color: #ff6c00;
  font-size: 14px;
  padding: 1px 7px;
  font-weight: 500;
  text-transform: uppercase;
  transition: all .15s linear; }
  .btn-transparent:hover {
    background-color: #ff6c00;
    border-color: #ff6c00;
    color: #fff; }
  .btn-transparent:active {
    background-color: #f05d00;
    border-color: #f05d00;
    color: #fff; }

.btn-disabled {
  background: #ccc;
  outline: 0;
  text-decoration: none; }
  .btn-disabled:hover, .btn-disabled:active {
    background: #ccc; }

.search-btn {
  display: inline-block;
  background-color: transparent;
  border: none;
  outline: none;
  color: #78909c;
  width: 25px;
  height: 25px;
  vertical-align: middle;
  margin-top: -5px;
  background-image: url(../images/search.png); }

.btn-simple {
  border: none;
  border-bottom: 1px solid #ff6c00;
  background-color: transparent;
  display: inline-block;
  width: auto;
  color: #ff6c00;
  font-size: 17px;
  font-weight: 700;
  padding: 0;
  border-radius: 0; }
  .btn-simple:hover {
    color: #ff7b0f;
    background-color: transparent; }
  .btn-simple:active {
    color: #ff6c00 -15%;
    background-color: transparent; }

.new-empl {
  float: right;
  margin-top: -15px;
  margin-right: 50px; }

.btn-cancel {
  margin-right: 20px; }

.collapse-item {
  margin-bottom: 10px;
  position: relative; }
  .collapse-item a:hover h3 {
    display: inline-block;
    color: #333;
    border-bottom: 1px dotted #333;
    padding: 0;
    margin: 0;
    transition: all .15s linear; }
  .collapse-item a:hover .icon-collapse-arrow {
    border-top-color: #333; }

.collapse-block > a {
  display: block;
  position: relative; }

.collapse-block h3 {
  display: inline-block;
  color: #000;
  border-bottom: 1px dotted #000;
  padding: 0;
  margin: 0;
  transition: all .15s linear; }

.collapse-block .collapsed h3 {
  color: #000;
  border-bottom-color: #000; }

.well p {
  margin: 0;
  padding: 15px 0 10px; }

.icon-collapse-arrow {
  display: block;
  position: absolute;
  top: 25px;
  right: 75px;
  width: 10px;
  height: 10px;
  border-right: 2px solid #78909c;
  border-bottom: 2px solid #78909c;
  -webkit-transform: rotate(-45deg);
          transform: rotate(-45deg);
  cursor: pointer; }

.icon-collapse-arrow {
  transition: -webkit-transform .3s ease;
  transition: transform .3s ease;
  -webkit-transform-origin: 50% 50%;
          transform-origin: 50% 50%;
  display: inline-block; }
  .icon-collapse-arrow:before {
    transition: -webkit-transform .3s ease;
    transition: transform .3s ease;
    display: inline-block; }

.up-arrow {
  -webkit-transform: rotateZ(45deg) !important;
          transform: rotateZ(45deg) !important; }

.fade {
  opacity: 0;
  transition: opacity .15s linear;
  background-color: transparent; }

.modal.fade.in {
  opacity: 1;
  background-color: rgba(0, 0, 0, 0.3);
  transition: opacity .15s linear; }

.hidden {
  display: none;
  opacity: 0; }

.collapse {
  display: none;
  visibility: hidden; }

.collapse.in {
  display: block;
  visibility: visible; }

.collapsing {
  position: relative;
  height: 0;
  overflow: hidden;
  transition-timing-function: ease;
  transition-duration: .35s;
  transition-property: height, visibility; }

.tab-content {
  position: relative; }
  .tab-content > .tab-pane {
    display: none;
    visibility: hidden; }
  .tab-content > .tab-pane.active {
    display: block;
    visibility: visible; }
  .tab-content .fade {
    opacity: 0;
    transition: opacity .15s linear; }
  .tab-content .fade.in {
    opacity: 1; }

.slider-gallery-block {
  height: auto; }

.photo {
  position: relative; }

.photo-strip {
  margin: 20px 0 35px;
  position: relative;
  min-height: 330px; }

.photo-strip .photo {
  box-sizing: border-box;
  height: 235px;
  width: 380px;
  overflow: hidden; }

.photo-strip .photo > img {
  position: relative;
  display: block;
  min-width: 100%;
  min-height: 100%; }

.photo-strip .strip {
  overflow: hidden;
  position: absolute;
  height: 85px;
  width: 380px;
  left: 0;
  right: 0;
  bottom: 0; }

.photo-strip .strip-inner {
  position: relative;
  bottom: 0;
  left: 0;
  white-space: nowrap; }

.photo-strip .strip-item {
  display: inline-block;
  height: 85px;
  width: 120px;
  overflow: hidden;
  box-sizing: border-box;
  opacity: .5;
  transition: opacity 0.15s linear; }
  .photo-strip .strip-item:hover {
    opacity: 1; }

.photo-strip .strip-item > img {
  position: relative;
  display: block;
  max-width: 100%;
  min-height: 100%; }

.photo-strip .strip-item + .strip-item {
  margin-left: 6px;
  transition: opacity 0.15s linear; }

.photo-strip .strip-item.active {
  transition: opacity 0.15s linear;
  opacity: 1; }

.photo-strip .prev,
.photo-strip .next {
  opacity: .5;
  transition: opacity 0.15s linear;
  display: block;
  width: 15px;
  height: 30px;
  position: absolute; }

.photo-strip .prev:hover, .photo-strip .prev:focus,
.photo-strip .next:hover,
.photo-strip .next:focus {
  opacity: 1; }

.photo-strip .prev > span,
.photo-strip .next > span {
  display: block;
  margin: 0 auto; }

.photo-strip .prev .arrow-left,
.photo-strip .next .arrow-left {
  width: 0;
  height: 22px;
  border: 11px solid transparent;
  border-right: 9px solid #ff6c00; }

.photo-strip .prev .arrow-right,
.photo-strip .next .arrow-right {
  width: 0;
  height: 22px;
  border: 11px solid transparent;
  border-left: 9px solid #ff6c00; }

.photo-strip .prev.hidden,
.photo-strip .next.hidden {
  display: none; }

.photo-strip .prev {
  bottom: 25px;
  left: -30px; }

.photo-strip .next {
  bottom: 25px;
  left: 390px; }

.date {
  position: relative; }

.datepicker {
  position: absolute;
  width: 315px;
  padding: 5px;
  z-index: 1200;
  background: #fff;
  box-shadow: 0 1px 3px rgba(0, 78, 141, 0.25);
  font-weight: 300; }
  .datepicker table th, .datepicker table td {
    padding: 0px;
    text-align: center;
    color: #78909c; }
  .datepicker table th {
    background-color: #fff;
    border-bottom: none;
    padding: 5px 0; }
  .datepicker table td:hover {
    color: #000;
    cursor: pointer; }
  .datepicker table .active {
    color: #000; }
  .datepicker table .prev, .datepicker table .next {
    font-family: cg;
    cursor: pointer; }
  .datepicker table .old, .datepicker table .new {
    color: #eceff1; }
  .datepicker table .switch {
    text-align: center;
    cursor: pointer; }
  .datepicker table .icon-cg-arrow-right, .datepicker table .icon-cg-arrow-left {
    cursor: pointer; }
  .datepicker table td span.month, .datepicker table td span.year {
    display: inline-block;
    margin: 5px 10px;
    color: #78909c; }
    .datepicker table td span.month:hover, .datepicker table td span.year:hover {
      color: #000; }
  .datepicker table span.month.active {
    color: #000; }

table.striped {
  font-size: 14px; }
  table.striped.thin thead tr td,
  table.striped.thin tbody tr td {
    font-weight: 300; }
  table.striped tbody tr:nth-of-type(even) {
    background-color: #f5f7f8; }
  table.striped tfoot {
    border-color: #ccc;
    border-style: solid;
    border-width: 1px 0 0 0; }
    table.striped tfoot tr td {
      font-size: 14px;
      font-weight: 300;
      text-align: center;
      vertical-align: middle;
      height: 60px; }

table.center td {
  text-align: center; }

thead.blue-table-head tr {
  background-color: #effafe;
  font-size: 14px;
  font-weight: 700; }

table.fleft thead tr td:first-of-type {
  padding-left: 25px; }

table.fleft tbody tr td:first-of-type {
  padding-left: 25px; }

table.simple thead tr td {
  text-align: center;
  height: 60px;
  vertical-align: middle; }

table.simple tbody tr td {
  font-size: 14px;
  font-weight: 300;
  text-align: center;
  vertical-align: middle;
  height: 60px; }

table tr td {
  border-color: #fff; }

table {
  border-color: transparent; }
  table tr.green-row {
    background-color: #cceddd !important;
    border-bottom: 2px solid #00a454 !important; }
  table tr.red-row {
    background-color: #ffd4d4 !important;
    border-bottom: 2px solid #e9242d !important; }

table.modal-table tbody tr:nth-of-type(odd) {
  background-color: #f5f7f8; }

table.modal-table tbody td:first-of-type {
  padding-left: 25px; }

table.modal-table thead tr td,
table.modal-table tbody tr td {
  font-weight: 300; }

.lead-table {
  margin-top: 30px; }
  .lead-table td {
    padding: 5px; }
  .lead-table thead tr td {
    padding: 0 10px; }

.adopted {
  font-size: 17px !important;
  font-weight: 900 !important;
  color: #2f8804 !important; }

.modal-content {
  display: block;
  position: relative;
  width: 890px;
  height: auto;
  padding: 40px;
  margin-left: 70px;
  border-radius: 0;
  background-color: #fff; }
  .modal-content h4 {
    color: #ff6c00;
    padding-bottom: 30px;
    border-bottom: 1px solid #ff6c00;
    margin-bottom: 50px;
    text-transform: uppercase; }
    .modal-content h4 .empl-id {
      margin-left: 20px;
      font-weight: 900;
      color: #000;
      font-size: 18px; }
  .modal-content .icon-del {
    position: absolute;
    top: 20px;
    right: 20px; }
  .modal-content .form-wrapper {
    display: block; }
    .modal-content .form-wrapper .left-col,
    .modal-content .form-wrapper .right-col {
      display: inline-block;
      width: 315px;
      vertical-align: top; }
    .modal-content .form-wrapper .left-col {
      margin-right: 150px; }

.selectize-control .selectize-input.dropdown-active {
  border-bottom-color: #ff6c00 !important; }

.selectize-control .selectize-input.dropdown-active:before {
  border-bottom-color: #ff6c00; }

.selectize-control.single .selectize-input {
  padding: 5px 15px !important; }

.selectize-dropdown.single {
  padding: 5px 0 5px 7px !important; }

.selectize-control.single .selectize-input,
.selectize-dropdown.single {
  border-color: transparent;
  border-bottom-color: #969696;
  background-color: transparent;
  box-shadow: none;
  background-image: none;
  border-radius: 0;
  padding: 4px 0;
  font-size: 16px;
  font-weight: 300;
  transition: all .15s linear; }
  .selectize-control.single .selectize-input:hover,
  .selectize-dropdown.single:hover {
    border-bottom-color: #969696; }
  .selectize-control.single .selectize-input:active, .selectize-control.single .selectize-input:focus,
  .selectize-dropdown.single:active,
  .selectize-dropdown.single:focus {
    border-bottom-color: #ff6c00; }

.selectize-dropdown.single {
  background-color: #fff; }

.selectize-control.multi .selectize-input,
.selectize-dropdown.multi {
  border-color: transparent;
  border-bottom-color: #969696;
  background-color: transparent;
  box-shadow: none;
  background-image: none;
  border-radius: 0;
  padding: 4px 0;
  font-size: 16px;
  transition: all .15s linear; }
  .selectize-control.multi .selectize-input:hover,
  .selectize-dropdown.multi:hover {
    border-bottom-color: #969696; }
  .selectize-control.multi .selectize-input:active, .selectize-control.multi .selectize-input:focus,
  .selectize-dropdown.multi:active,
  .selectize-dropdown.multi:focus {
    border-bottom-color: #ff6c00; }

.selectize-dropdown.multi {
  background-color: #fff; }

.selectize-control.multi .selectize-input [data-value] {
  background-image: none;
  text-shadow: none;
  color: #fff;
  background-color: #ff6c00;
  transition: background-color .15s linear; }
  .selectize-control.multi .selectize-input [data-value]:hover {
    background-color: #969696; }
  .selectize-control.multi .selectize-input [data-value]:active {
    background-color: #ff6c00; }
  .selectize-control.multi .selectize-input [data-value] .remove {
    color: #fff;
    margin-left: 2px;
    vertical-align: middle; }
    .selectize-control.multi .selectize-input [data-value] .remove:hover, .selectize-control.multi .selectize-input [data-value] .remove:active, .selectize-control.multi .selectize-input [data-value] .remove:focus {
      color: #fff; }
  .selectize-control.multi .selectize-input [data-value] .item.active {
    color: #fff; }

.selectize-control.multi .selectize-input.has-items {
  padding: 4px 0; }

.selectize-dropdown.selectize,
.selectize-dropdown.multi {
  width: 100% !important;
  margin-top: 1px;
  padding: 4px 7px;
  box-shadow: 0 1px 3px rgba(0, 78, 141, 0.25); }

.selectize-dropdown-content .option,
.selectize-dropdown-content .option.active {
  color: #78909c; }
  .selectize-dropdown-content .option:hover,
  .selectize-dropdown-content .option.active:hover {
    color: #000;
    background-color: #fff; }

[data-value="value0"] {
  color: #bcbcbc; }

.scrollbar-measure {
  position: absolute;
  top: -9999px;
  width: 50px;
  height: 50px;
  overflow: scroll; }

/* Barebones Compass block styles
 *
 * General block styles
 */
.barebones-link {
  padding: 0 0 0 25px;
  position: relative; }
  .barebones-link .svg-icon-animated:before {
    background-image: svg("facebook"); }
  .barebones-link .svg-icon-animated:after {
    background-image: svg("facebook", "[fill]: #aaa"); }
  .barebones-link .icon { background-image: url(../images/sprite.png); background-position: 0 0; width: 20px; height: 20px; }

.breadcrumbs a.breadcrumb-item {
  display: inline-block;
  position: relative;
  margin-right: 20px;
  color: #78909c;
  font-size: 14px; }
  .breadcrumbs a.breadcrumb-item:after {
    display: block;
    position: absolute;
    content: "";
    top: 7px;
    right: -14px;
    width: 8px;
    height: 8px;
    border-top: 2px solid #78909c;
    border-right: 2px solid #78909c;
    -webkit-transform: rotate(45deg);
            transform: rotate(45deg); }
  .breadcrumbs a.breadcrumb-item.current-breadcrump {
    color: #78909c; }
    .breadcrumbs a.breadcrumb-item.current-breadcrump:after {
      display: none;
      position: absolute;
      content: "";
      top: 6px;
      right: -14px;
      width: 8px;
      height: 8px;
      border-top: 2px solid #78909c;
      border-right: 2px solid #78909c;
      -webkit-transform: rotate(45deg);
              transform: rotate(45deg); }

.application-info {
  display: block;
  margin-top: 50px;
  margin-bottom: 25px; }
  .application-info .app-id {
    font-size: 18px;
    font-weight: 700;
    text-transform: uppercase; }
  .application-info .app-status,
  .application-info .app-type {
    font-size: 18px;
    font-weight: 300; }
    .application-info .app-status span,
    .application-info .app-type span {
      color: #ff6c00;
      font-weight: 900; }
  .application-info .user-id {
    text-transform: uppercase;
    font-weight: 300;
    font-size: 18px; }
  .application-info .user-status {
    font-weight: 300; }
    .application-info .user-status span {
      color: #ff6c00;
      font-weight: 900; }
  .application-info .manager-name {
    display: inline-block;
    position: relative;
    font-weight: 300; }
    .application-info .manager-name:after {
      display: block;
      position: absolute;
      content: "";
      top: 5px;
      right: -20px;
      width: 8px;
      height: 8px;
      border-right: 2px solid #000;
      border-bottom: 2px solid #000;
      -webkit-transform: rotate(45deg);
              transform: rotate(45deg);
      cursor: pointer; }

.user-rating {
  font-size: 18px;
  font-weight: 300;
  margin-bottom: 12px; }
  .user-rating span {
    color: #ff6c00;
    font-weight: 900; }

.application-collapse {
  display: block; }
  .application-collapse .collapse-item a h4 {
    display: block;
    text-transform: uppercase;
    color: #000;
    font-weight: 300;
    display: inline-block;
    width: 100%;
    margin: 20px 0; }
    .application-collapse .collapse-item a h4:hover {
      color: #000; }
  .application-collapse .collapse-item.borrower-desire a > h4, .application-collapse .collapse-item.user-data a > h4, .application-collapse .collapse-item.user-app a > h4 {
    display: inline-block;
    width: 47%; }
    .application-collapse .collapse-item.borrower-desire a > h4:last-of-type, .application-collapse .collapse-item.user-data a > h4:last-of-type, .application-collapse .collapse-item.user-app a > h4:last-of-type {
      margin-left: 52px; }

.grey-collapse .collapse-item {
  margin-bottom: 5px; }
  .grey-collapse .collapse-item .collapse-h {
    position: relative;
    margin: 0;
    padding: 20px 0; }
    .grey-collapse .collapse-item .collapse-h:before {
      display: block;
      position: absolute;
      content: "";
      width: 8px;
      height: 20px;
      top: 20px;
      left: -20px;
      background-color: #ff6c00; }
    .grey-collapse .collapse-item .collapse-h.other-source:before {
      background-color: #17b049; }
  .grey-collapse .collapse-item.contract .collapse-h:before {
    background-color: #62c96e; }
  .grey-collapse .collapse-item.syndicate .collapse-h:before {
    background-color: #23c7b9; }
  .grey-collapse .collapse-item.agreeing .collapse-h:before {
    background-color: #a567a7; }
  .grey-collapse .collapse-item.amortization .collapse-h:before, .grey-collapse .collapse-item.repayment-schedule .collapse-h:before {
    background-color: #0036ff; }
  .grey-collapse .collapse-item .well {
    margin: 25px 0 40px; }

.grey-collapse .collaps-header {
  position: absolute;
  top: 0;
  left: -40px;
  width: 100%;
  height: 60px;
  background-color: #eceff1; }

.borrower-desire table tr td:nth-of-type(1),
.pledge-description table tr td:nth-of-type(1) {
  font-weight: 300; }

.borrower-desire table tr td:nth-of-type(2),
.pledge-description table tr td:nth-of-type(2) {
  color: #ff6c00;
  font-weight: 700;
  font-size: 17px; }

.borrower-desire .comments-block,
.user-app .comments-block {
  max-height: 190px;
  overflow-y: scroll;
  font-weight: 300; }
  .borrower-desire .comments-block p,
  .user-app .comments-block p {
    padding-top: 0; }
  .borrower-desire .comments-block .name-fo,
  .user-app .comments-block .name-fo {
    color: #00a8ff; }
  .borrower-desire .comments-block .name-sb,
  .user-app .comments-block .name-sb {
    color: #819b06; }

.user-data table tr td {
  font-weight: 300;
  font-size: 14px; }
  .user-data table tr td .add-plus,
  .user-data table tr td .view-eye,
  .user-data table tr td .icon-note {
    display: inline-block;
    cursor: pointer; }
  .user-data table tr td .add-plus {
    height: 16px;
    width: 16px;
    margin-right: 10px;
    background-image: url(../images/plus-black.png); }
  .user-data table tr td .view-eye {
    height: 16px;
    width: 32px;
    background-image: url(../images/eye-black.png); }
  .user-data table tr td .icon-note {
    height: 21px;
    width: 21px;
    background-image: url(../images/note-black.png);
    margin-right: 10px; }
  .user-data table tr td:nth-of-type(4) {
    text-align: center;
    vertical-align: middle; }

.user-data .not-confirmed {
  font-weight: 500;
  text-transform: uppercase;
  color: #ff0000; }

.user-data .confirmed {
  font-weight: 500;
  text-transform: uppercase;
  color: #17b049; }

.pledge-description .plege-documents h4 {
  color: #ff6c00;
  text-transform: uppercase;
  font-weight: 300; }

.pledge-description .plege-documents .doc-item {
  display: inline-block;
  height: 75px;
  width: 57px;
  cursor: pointer;
  background-image: url(../images/doc.png);
  background-size: contain;
  margin-right: 25px; }

.collapse-item.contract .contracts-block .contract-item {
  display: inline-block;
  position: relative;
  width: 190px;
  height: 150px;
  background-color: #eaeaea;
  margin-right: 35px; }
  .collapse-item.contract .contracts-block .contract-item .add-contr,
  .collapse-item.contract .contracts-block .contract-item .view-contr {
    display: block;
    position: absolute;
    height: 60px;
    width: 60px;
    background-color: #fff;
    border-radius: 50%;
    top: 50%;
    margin-top: -30px;
    cursor: pointer; }
  .collapse-item.contract .contracts-block .contract-item .add-contr {
    left: 16%;
    background-image: url(../images/plus.png); }
  .collapse-item.contract .contracts-block .contract-item .view-contr {
    right: 16%;
    background-image: url(../images/eye.png); }

.collapse-item.documents h4 {
  display: block;
  text-transform: uppercase;
  font-weight: 300;
  margin-top: 0; }

.collapse-item.documents .passport-data-block {
  display: inline-block;
  width: 610px;
  margin-right: 60px; }
  .collapse-item.documents .passport-data-block h4 {
    display: block; }

.collapse-item.documents .doc-item {
  display: inline-block;
  margin-right: 15px; }
  .collapse-item.documents .doc-item .doc-title {
    font-weight: 300;
    font-size: 14px;
    margin: 10px 0 20px;
    text-align: center; }
  .collapse-item.documents .doc-item:nth-of-type(3n) {
    margin-right: 0; }

.collapse-item.documents .doc-block {
  display: inline-block;
  position: relative;
  width: 190px;
  height: 150px;
  background-color: #eaeaea; }
  .collapse-item.documents .doc-block .doc-note,
  .collapse-item.documents .doc-block .doc-view {
    display: block;
    position: absolute;
    height: 60px;
    width: 60px;
    background-color: #fff;
    border-radius: 50%;
    top: 50%;
    margin-top: -30px;
    cursor: pointer; }
  .collapse-item.documents .doc-block .doc-note {
    left: 16%;
    background-image: url(../images/note.png); }
  .collapse-item.documents .doc-block .doc-view {
    right: 16%;
    background-image: url(../images/eye.png); }

.collapse-item.documents .inn-app-block {
  display: inline-block;
  width: 300px;
  vertical-align: top; }
  .collapse-item.documents .inn-app-block h4 {
    margin: 10px 0 17px; }
  .collapse-item.documents .inn-app-block h4:first-of-type {
    margin: 0 0 20px; }

.syndicate .checkbox-label {
  text-transform: uppercase;
  font-weight: 300;
  font-size: 18px;
  margin-bottom: 20px;
  margin-left: 15px; }

.agreeing table {
  width: 94%; }
  .agreeing table thead tr {
    border-bottom: 1px solid #000; }
    .agreeing table thead tr td:first-of-type {
      padding-left: 15px; }
  .agreeing table tbody tr:hover {
    background-color: #effafe !important; }
  .agreeing table tbody tr td {
    font-size: 14px;
    font-weight: 300;
    vertical-align: middle;
    height: 45px; }
    .agreeing table tbody tr td:first-of-type {
      padding-left: 15px; }

.icon-check {
  display: inline-block;
  margin-right: 25px;
  height: 23px;
  width: 23px;
  background-image: url(../images/check-green.png);
  cursor: pointer; }

.icon-del {
  display: inline-block;
  height: 23px;
  width: 23px;
  background-image: url(../images/del.png);
  cursor: pointer; }

.icon-comments {
  display: block;
  margin-left: 35px;
  height: 27px;
  width: 23px;
  background-image: url(../images/comments.png);
  cursor: pointer; }

.options-block {
  margin-top: 30px; }
  .options-block .btn {
    margin-right: 20px; }

.info-tabs-block {
  margin-left: -40px; }

.info-tabs {
  list-style: none;
  margin: 0;
  padding: 0;
  height: 60px;
  width: 100%; }
  .info-tabs ul {
    padding-left: 0; }
  .info-tabs li {
    display: inline-block;
    float: left; }
    .info-tabs li.li-s {
      width: 17%; }
    .info-tabs li.li-m {
      width: 19%; }
    .info-tabs li.li-l {
      width: 28%; }
    .info-tabs li a {
      display: block;
      width: 100%;
      height: auto;
      vertical-align: middle;
      margin: 0 auto;
      text-decoration: none;
      font-size: 14px;
      line-height: 20px;
      padding-top: 10px;
      height: 60px;
      font-weight: 500;
      color: #000;
      cursor: pointer;
      border-right-color: transparent;
      background-color: #eceff1;
      text-align: center;
      transition: border, background-color .15s linear; }
    .info-tabs li.active a {
      background: #ff6c00;
      color: #fff; }

.tab-content {
  margin: 30px 0; }
  .tab-content table.in-full-content tr td {
    vertical-align: middle;
    width: 33%;
    font-weight: 300; }
    .tab-content table.in-full-content tr td:first-of-type {
      text-align: left;
      padding-left: 40px; }
    .tab-content table.in-full-content tr td .icon-check,
    .tab-content table.in-full-content tr td .icon-del {
      margin: 0 10px; }

.prop-cell {
  width: 220px; }

.date-form-group {
  margin: 62px 0 132px; }

.lead-empl-table table tr {
  cursor: pointer; }

.user-office-head {
  display: block;
  padding: 20px 0;
  margin-left: -40px;
  padding-left: 40px;
  color: #ff6c00;
  font-weight: 500;
  margin-bottom: 30px;
  text-transform: uppercase;
  background-color: #eceff1; }

.user-office-content .left-col {
  display: inline-block;
  width: 50%;
  vertical-align: top; }

.user-office-content .right-col {
  display: inline-block;
  width: 40%;
  vertical-align: top; }

.user-office-content table {
  font-weight: 300; }

.user-office-content .user-office-photo {
  height: 160px;
  margin-bottom: 15px; }
  .user-office-content .user-office-photo img {
    max-height: 100%; }

.user-office-content .options-block {
  vertical-align: middle;
  margin-top: 30px; }

.icon-pen {
  display: inline-block;
  width: 16px;
  height: 16px;
  background-image: url(../images/pen.png);
  cursor: pointer;
  margin: 0 15px; }

div[class^="icon-property-"] {
  display: inline-block;
  height: 55px;
  width: 65px; }

.icon-property-1 {
  background-image: url(../images/property-1.png); }

.icon-property-2 {
  background-image: url(../images/property-2.png); }

.icon-property-3 {
  background-image: url(../images/property-3.png); }

.icon-property-4 {
  background-image: url(../images/property-4.png); }

.icon-property-5 {
  background-image: url(../images/property-5.png); }

.icon-property-6 {
  background-image: url(../images/property-6.png); }

.aside-item-header .icon-item {
  position: absolute;
  display: block;
  top: 47%;
  left: 15px;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
  width: 25px;
  height: 25px; }

.icon-credit-grey {
  background-image: url(../images/icon-credit-grey.png);
  background-size: contain;
  width: 23px !important; }

.icon-invest-grey {
  background-image: url(../images/icon-invest-grey.png); }

.icon-dep-grey {
  background-image: url(../images/icon-dep-grey.png);
  background-size: contain;
  width: 23px !important; }

.icon-users-grey {
  background-image: url(../images/icon-users-grey.png); }

.icon-empl-grey {
  background-image: url(../images/icon-empl-grey.png); }

.icon-tickets-grey {
  background-image: url(../images/icon-tickets-grey.png); }

.icon-stat-grey {
  background-image: url(../images/icon-stat-grey.png); }

.icon-sett-grey {
  background-image: url(../images/icon-sett-grey.png); }

.icon-mail-admin {
  background-image: url(../images/mail-admin.png); }

.icon-bell-admin {
  background-image: url(../images/bell-admin.png);
  margin-top: 1px; }

@media (max-width: 420px) {
  body .layout-header .left-block {
    left: 90px; }
  body .layout-header .right-block {
    margin-right: 10px; }
  body .right-block .messages,
  body .right-block .notifications {
    margin-left: 10px; } }

@media (max-width: 720px) {
  .right-block .webank-admin,
  .right-block .head-line {
    display: none; }
  .layout-header .left-block {
    position: absolute;
    top: 0;
    left: 115px;
    white-space: nowrap; }
  #head-search {
    width: 70px; } }

/* Barebones Compass layout styles
 *
 * General layout styles
 */
.layout-content {
  margin: 0;
  padding-left: 40px;
  height: auto !important; }
  .layout-content.asidebg {
    position: relative; }
    .layout-content.asidebg:before {
      display: block;
      position: absolute;
      content: "";
      width: 240px;
      height: 100%;
      min-height: 100%;
      z-index: 1700;
      background-color: #303537;
      top: 0;
      left: -255px; }

/* Default layout container width
 *
 * NOTE: This should not be changed here. Change it in base/_variable.scss
 *
 * @see base/_variable.scss
 */
.layout-container {
  width: 960px;
  margin: 0; }

.layout-container-fluid {
  margin: 0 auto;
  min-width: 935px;
  max-width: 1800px; }

/* Barebones Compass layout styles
 *
 * Grid styles
 */
.row {
  margin: 0; }
  .layout-container-fluid > .row {
    margin: 0; }
  .row > .col-1, .row > .col-2, .row > .col-3, .row > .col-4, .row > .col-5, .row > .col-6, .row > .col-7, .row > .col-8, .row > .col-9, .row > .col-10, .row > .col-11, .row > .col-12 {
    min-height: 1px;
    padding: 0;
    display: inline-block;
    vertical-align: top;
    position: relative; }
  .row > .col-1 {
    width: 80px; }
    .layout-container-fluid > .row > .col-1 {
      width: 8.33333%; }
  .row > .col-2 {
    width: 160px; }
    .layout-container-fluid > .row > .col-2 {
      width: 16.66667%; }
  .row > .col-3 {
    width: 240px; }
    .layout-container-fluid > .row > .col-3 {
      width: 25%; }
  .row > .col-4 {
    width: 320px; }
    .layout-container-fluid > .row > .col-4 {
      width: 33.33333%; }
  .row > .col-5 {
    width: 400px; }
    .layout-container-fluid > .row > .col-5 {
      width: 41.66667%; }
  .row > .col-6 {
    width: 480px; }
    .layout-container-fluid > .row > .col-6 {
      width: 50%; }
  .row > .col-7 {
    width: 560px; }
    .layout-container-fluid > .row > .col-7 {
      width: 58.33333%; }
  .row > .col-8 {
    width: 640px; }
    .layout-container-fluid > .row > .col-8 {
      width: 66.66667%; }
  .row > .col-9 {
    width: 720px; }
    .layout-container-fluid > .row > .col-9 {
      width: 75%; }
  .row > .col-10 {
    width: 800px; }
    .layout-container-fluid > .row > .col-10 {
      width: 83.33333%; }
  .row > .col-11 {
    width: 880px; }
    .layout-container-fluid > .row > .col-11 {
      width: 91.66667%; }
  .row > .col-12 {
    width: 960px; }
    .layout-container-fluid > .row > .col-12 {
      width: 100%; }
  .row.half-col > .col-6 {
    width: 43%; }
  .row.half-col .col-6:first-of-type {
    margin-right: 64px;
    width: 46%; }

/* Barebones Compass layout styles
 *
 * Header styles
 */
.layout-header {
  height: 80px;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  background-color: #eceff1;
  color: #78909c;
  padding-left: 255px;
  z-index: 100; }

#head-search {
  display: inline-block;
  border: none;
  outline: none;
  height: 30px;
  width: 200px;
  color: #78909c;
  background-color: #eceff1; }
  #head-search:focus {
    outline: none; }
  #head-search::-webkit-input-placeholder {
    color: #78909c; }
  #head-search::-moz-placeholder {
    color: #78909c; }
  #head-search:-ms-input-placeholder {
    color: #78909c; }
  #head-search::placeholder {
    color: #78909c; }

.left-block {
  line-height: 80px;
  float: left;
  margin-left: 30px; }

.right-block {
  margin-top: 27px;
  float: right;
  margin-right: 30px;
  text-align: right; }
  .right-block .webank-admin {
    float: right;
    font-size: 18px;
    text-transform: uppercase;
    padding-left: 10px;
    height: 25px;
    margin-left: 10px; }
  .right-block .head-line {
    float: right;
    height: 25px;
    width: 2px;
    background-color: #CFD8DC;
    margin-left: 25px; }
  .right-block .messages,
  .right-block .notifications {
    float: right;
    position: relative;
    margin-left: 20px;
    width: 25px;
    height: 20px;
    margin-top: 2px;
    cursor: pointer; }
    .right-block .messages .icon-item,
    .right-block .notifications .icon-item {
      width: 100%;
      height: 100%; }
    .right-block .messages .notification-num,
    .right-block .notifications .notification-num {
      position: absolute;
      top: -5px;
      right: -5px;
      width: 14px;
      height: 14px;
      text-align: left;
      padding: 0 3px;
      font-size: 11px;
      border-radius: 50%;
      background-color: #ff6c00;
      color: #fff; }
  .right-block .notifications .notification-num {
    right: -2px; }

/* Barebones Compass layout styles
 *
 * Aside styles
 */
.layout-aside {
  display: inline-block;
  position: relative;
  width: 255px;
  min-height: 100%;
  height: auto;
  padding-right: 15px;
  color: #78909c;
  float: left;
  background-color: #303537;
  z-index: 2000; }

.application-tabs {
  list-style: none;
  margin: 0;
  padding: 0;
  width: 100%; }

.profile-info {
  display: block;
  position: relative;
  text-align: center;
  margin-bottom: 30px; }
  .profile-info .prof-photo {
    position: relative;
    width: 90px;
    height: 90px;
    margin: 35px auto 20px;
    overflow: hidden;
    border-radius: 50%; }
    .profile-info .prof-photo img {
      min-width: 100%;
      min-height: 100%;
      width: 100%;
      text-align: center; }
  .profile-info .prof-indicator {
    display: block;
    position: absolute;
    top: 80px;
    left: 50%;
    margin-left: -12px;
    width: 24px;
    height: 24px;
    border-radius: 50%;
    background-color: #ff6c00;
    border: 4px solid #263238; }
  .profile-info .prof-name {
    position: relative;
    font-weight: 500;
    font-size: 18px;
    margin-bottom: -3px;
    cursor: pointer; }
  .profile-info .prof-department {
    font-weight: 100;
    font-size: 14px;
    cursor: pointer; }

.prof-name-collapse .collapse.in {
  border-bottom: 2px solid #ff6c00; }

.prof-name-collapse.active .prof-name {
  color: #ff6c00; }

.prof-name-collapse .prof-name {
  position: relative;
  font-weight: 500;
  font-size: 18px;
  margin-bottom: -3px;
  cursor: pointer;
  color: #78909c;
  transition: all .15s linear; }
  .prof-name-collapse .prof-name .icon-collapse-arrow {
    border-color: #78909c;
    top: 7px;
    right: 43px;
    width: 8px;
    height: 8px;
    -webkit-transform: rotate(45deg);
            transform: rotate(45deg);
    transition: all .15s linear; }
    .prof-name-collapse .prof-name .icon-collapse-arrow.up-arrow {
      border-color: #ff6c00; }

.prof-name-collapse .prof-department {
  color: #78909c; }

.prof-name-collapse ul li {
  position: relative;
  text-align: left;
  padding-left: 45px; }
  .prof-name-collapse ul li a {
    color: #fff;
    font-size: 14px; }
    .prof-name-collapse ul li a.active {
      color: #ff6c00; }

.aside-item {
  display: block;
  position: relative;
  font-size: 14px;
  font-weight: 500; }
  .aside-item .item-name {
    color: #78909c; }
  .aside-item .aside-item-cont {
    height: auto;
    overflow: hidden;
    height: 0;
    transition: height .2s linear; }
  .aside-item.active .aside-item-header {
    background-color: #3f484c;
    border-bottom: 2px solid #ff6c00; }
    .aside-item.active .aside-item-header .item-name {
      color: #fff; }
  .aside-item.active > .aside-item-cont {
    transition: height .2s linear;
    height: auto; }
  .aside-item.open .aside-item-cont {
    display: block;
    height: auto; }
  .aside-item.open .icon-collapse-arrow {
    -webkit-transform: rotateZ(45deg) !important;
            transform: rotateZ(45deg) !important; }
  .aside-item .aside-item-header {
    position: relative;
    display: block;
    width: 100%;
    padding-left: 50px;
    height: 60px;
    cursor: pointer; }
    .aside-item .aside-item-header .item-name {
      line-height: 60px; }
    .aside-item .aside-item-header .notification-num {
      position: absolute;
      display: block;
      top: 50%;
      right: 35px;
      -webkit-transform: translateY(-50%);
              transform: translateY(-50%);
      width: 24px;
      height: 18px;
      font-size: 12px;
      text-align: center;
      color: #fff;
      background-color: #ff6c00;
      border: 1px solid #ff6c00; }
    .aside-item .aside-item-header .icon-collapse-arrow {
      position: absolute;
      display: block;
      top: 25px;
      right: 15px;
      width: 8px;
      height: 8px; }
  .aside-item .aside-item-cont {
    padding-left: 50px; }
    .aside-item .aside-item-cont ul {
      padding-left: 0;
      margin: 20px 0 20px; }
    .aside-item .aside-item-cont li {
      position: relative; }
      .aside-item .aside-item-cont li a {
        color: #fff; }
        .aside-item .aside-item-cont li a.active {
          color: #ff6c00; }
          .aside-item .aside-item-cont li a.active ul {
            padding-left: 0;
            margin-top: 30px; }
      .aside-item .aside-item-cont li .notification-num {
        position: absolute;
        display: block;
        top: 50%;
        right: 20px;
        -webkit-transform: translateY(-50%);
                transform: translateY(-50%);
        width: 24px;
        height: 18px;
        font-size: 12px;
        text-align: center;
        border: 1px solid #fff;
        color: #fff;
        background-color: transparent; }

body.small-aside .layout-header {
  padding-left: 130px; }

body.small-aside .layout-aside {
  width: 130px; }

body.small-aside .layout-aside + .layout-content {
  margin-left: 130px; }

body.small-aside .aside-item .aside-item-header .item-name {
  display: none; }

body.small-aside .aside-item .aside-item-cont {
  position: absolute;
  display: none;
  top: 0;
  background-color: #303537;
  left: 130px;
  width: auto;
  height: auto !important;
  white-space: nowrap;
  padding-left: 30px;
  padding-right: 30px; }

body.small-aside .aside-item .aside-item-cont li .notification-num {
  display: none; }

body.small-aside .prof-name-collapse .prof-name {
  display: none; }

body.small-aside .aside-item .aside-item-cont {
  display: none; }

body.small-aside .aside-item.open .aside-item-cont {
  display: block; }

body.small-aside .aside-item .aside-item-cont ul {
  margin-top: 20px; }

body.small-aside .prof-name-collapse ul li {
  padding-left: 10px;
  line-height: 16px; }

body.small-aside .aside-toggle:after {
  -webkit-transform: scaleX(-1);
          transform: scaleX(-1);
  left: 3px; }

.aside-toggle {
  display: block;
  position: absolute;
  width: 15px;
  height: 100%;
  top: 0;
  right: 0;
  background-color: #78909c;
  cursor: pointer; }
  .aside-toggle:after {
    display: block;
    position: absolute;
    content: "";
    width: 9px;
    height: 21px;
    top: 400px;
    left: 3px;
    background-image: url(../images/darrow.png);
    transition: all .15s linear; }

/* Barebones Compass layout styles
 *
 * Content styles
 */
.layout-content {
  padding-top: 100px; }

.layout-aside + .layout-content {
  margin-left: 255px; }

/* Barebones Compass layout styles
 *
 * Footer styles
 */
.layout-footer {
  background-color: #f0f2f5;
  height: 100px; }

html,
body {
  height: 100%; }

.layout-content {
  min-height: 100%;
  height: 100%; }

.layout-footer {
  clear: both;
  position: relative; }

/*# sourceMappingURL=data:application/json;base64, */
